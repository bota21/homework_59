[{"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/index.js":"1","/home/oem/Documents/JS/7_month/59/homework/chat-app/src/reportWebVitals.js":"2","/home/oem/Documents/JS/7_month/59/homework/chat-app/src/component/Message/Message.js":"3","/home/oem/Documents/JS/7_month/59/homework/chat-app/src/container/App.js":"4","/home/oem/Documents/JS/7_month/59/homework/chat-app/src/component/ChatForm/ChatForm.js":"5"},{"size":557,"mtime":1611765356064,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1611672223928,"results":"8","hashOfConfig":"7"},{"size":716,"mtime":1611771478642,"results":"9","hashOfConfig":"7"},{"size":1298,"mtime":1611772912598,"results":"10","hashOfConfig":"7"},{"size":805,"mtime":1611772544811,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j1f4u6",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/index.js",[],"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/reportWebVitals.js",[],"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/component/Message/Message.js",[],["24","25"],"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/container/App.js",["26","27","28"],"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/component/ChatForm/ChatForm.js",["29"],"import './ChatForm.css';\nimport {useState} from 'react';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\n\nconst ChatForm = props => {\n  const [formFields, setFormFields] = useState({\n    author: '',\n    message: ''\n  });\n  let inputHandler = e => {\n    setFormFields({...formFields, [e.target.name]: e.target.value})\n  }\n  return (\n  <Form onSubmit={e => props.submit(e, ...formFields)}>\n  <FormGroup className='form_wrapper'>\n  <Input type=\"text\" placeholder=\"Enter author\"\n  name='author' onChange={inputHandler} value={formFields.author}/>\n  <Button>Submit</Button>\n  </FormGroup>\n  <FormGroup>\n  <Input type=\"text\" name=\"message\" placeholder=\"Enter message\" \n  name='message' onChange={inputHandler} value={formFields.message} />\n  </FormGroup>  \n  </Form>\n  )\n}\n\nexport default ChatForm;",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":11,"column":7,"nodeType":"36","messageId":"37","endLine":11,"endColumn":8},{"ruleId":"38","severity":1,"message":"39","line":11,"column":21,"nodeType":"40","endLine":20,"endColumn":4},{"ruleId":"38","severity":1,"message":"41","line":20,"column":6,"nodeType":"42","endLine":20,"endColumn":16,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":22,"column":3,"nodeType":"46","endLine":22,"endColumn":17},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'urlForSend'. Either include it or remove the dependency array.","ArrayExpression",["49"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [messages, urlForSend]",{"range":"52","text":"53"},[545,555],"[messages, urlForSend]"]