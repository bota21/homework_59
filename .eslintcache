[{"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/index.js":"1","/home/oem/Documents/JS/7_month/59/homework/chat-app/src/reportWebVitals.js":"2","/home/oem/Documents/JS/7_month/59/homework/chat-app/src/component/Message/Message.js":"3","/home/oem/Documents/JS/7_month/59/homework/chat-app/src/container/App.js":"4","/home/oem/Documents/JS/7_month/59/homework/chat-app/src/component/ChatForm/ChatForm.js":"5"},{"size":557,"mtime":1611765356064,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1611672223928,"results":"8","hashOfConfig":"7"},{"size":716,"mtime":1611771478642,"results":"9","hashOfConfig":"7"},{"size":1137,"mtime":1611852709285,"results":"10","hashOfConfig":"7"},{"size":802,"mtime":1611849160752,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"c0civo",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/index.js",[],["24","25"],"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/reportWebVitals.js",[],"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/component/Message/Message.js",[],"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/container/App.js",["26","27"],"/home/oem/Documents/JS/7_month/59/homework/chat-app/src/component/ChatForm/ChatForm.js",["28"],"import './ChatForm.css';\nimport {useState} from 'react';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\n\nconst ChatForm = props => {\n  const [formFields, setFormFields] = useState({\n    author: '',\n    message: ''\n  });\n  let inputHandler = e => {\n    setFormFields({...formFields, [e.target.name]: e.target.value})\n  }\n  return (\n  <Form onSubmit={e => props.submit(e, formFields)}>\n  <FormGroup className='form_wrapper'>\n  <Input type=\"text\" placeholder=\"Enter author\"\n  name='author' onChange={inputHandler} value={formFields.author}/>\n  <Button>Submit</Button>\n  </FormGroup>\n  <FormGroup>\n  <Input type=\"text\" name=\"message\" placeholder=\"Enter message\" \n  name='message' onChange={inputHandler} value={formFields.message} />\n  </FormGroup>  \n  </Form>\n  )\n}\n\nexport default ChatForm;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":11,"column":13,"nodeType":"35","endLine":20,"endColumn":4},{"ruleId":"33","severity":1,"message":"36","line":20,"column":6,"nodeType":"37","endLine":20,"endColumn":16,"suggestions":"38"},{"ruleId":"39","severity":1,"message":"40","line":22,"column":3,"nodeType":"41","endLine":22,"endColumn":17},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["44"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"45","fix":"46"},"Update the dependencies array to be: [messages, url]",{"range":"47","text":"48"},[523,533],"[messages, url]"]